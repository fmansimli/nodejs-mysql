CREATE DATABASE IF NOT EXISTS mydb;


CREATE TABLE IF NOT EXISTS teams (
    id INT PRIMARY KEY AUTO_INCREMENT,
    name VARCHAR(100) NOT NULL,
    description VARCHAR(1000) NOT NULL,
    createdAt TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
    updatedAt TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    isActive BOOLEAN DEFAULT TRUE
);

CREATE TABLE IF NOT EXISTS users(
    id INT PRIMARY KEY AUTO_INCREMENT
    firstName VARCHAR(100) NOT NULL,
    lastName VARCHAR(100) NOT NULL,
    birthdate DATE NOT NULL,
    email VARCHAR(100) NOT NULL UNIQUE,
    supervisorId INT REFERENCES users(id) ON DELETE SET NULL,
    createdAt TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
    updatedAt TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    teamId  INT NOT NULL REFERENCES teams(id) ON DELETE SET NULL,
    isActive BOOLEAN DEFAULT TRUE,
    salary NUMERIC NOT NULL, -- DECIMAL , NUMERIC
    yearlySalary FLOAT NOT NULL, -- REAL , DOUBLE , FLOAT
    status ENUM("active","deactive","blocked")
);

CREATE TABLE IF NOT EXISTS accounts (
    id INT PRIMARY KEY AUTO_INCREMENT,
    createdAt TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
    updatedAt TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    userId INT NOT NULL REFERENCES users(id) ON DELETE CASCADE,
    isActive BOOLEAN DEFAULT TRUE
);

CREATE TABLE IF NOT EXISTS events (
    id INT PRIMARY KEY AUTO_INCREMENT,
    title VARCHAR(100) NOT NULL,
    description VARCHAR(1000) NOT NULL,
    createdAt TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
    updatedAt TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    scheduledAt DATE DEFAULT CURRENT_DATE, -- NOW() -- CURRENT_TIMESTAMP
    userId INT NOT NULL REFERENCES users(id) ON DELETE CASCADE,
    isActive BOOLEAN DEFAULT TRUE
);

CREATE TABLE IF NOT EXISTS projects (
    id INT PRIMARY KEY AUTO_INCREMENT,
    name VARCHAR(150) NOT NULL,
    description VARCHAR(1000) NOT NULL,
    createdAt TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
    updatedAt TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    isActive BOOLEAN DEFAULT TRUE
);


CREATE TABLE IF NOT EXISTS users_events (
    userId INT NOT NULL REFERENCES users(id) ON DELETE CASCADE,
    eventId INT NOT NULL REFERENCES events (id) ON DELETE CASCADE,
    PRIMARY KEY (userId,eventId)
);


CREATE TABLE IF NOT EXISTS users_friends (
    userId INT NOT NULL REFERENCES users(id) ON DELETE CASCADE,
    friendId INT NOT NULL REFERENCES users (id) ON DELETE CASCADE,
    PRIMARY KEY (userId,userId),
    check(userId<friendId)
);

CREATE TABLE IF NOT EXISTS users_projects (
    userId INT NOT NULL REFERENCES users(id) ON DELETE CASCADE,
    projectId INT NOT NULL REFERENCES users (id) ON DELETE CASCADE,
    PRIMARY KEY (userId,projectId)
);






